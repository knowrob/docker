#!/bin/bash

#
#
# The following commands need to be executed once to set up the MongoDB
# container and fill it with test data
#

echo "Current working directory ..."
echo "`(pwd)`"

# this is where the script (attempts to) get the path to roslog. This should be given as a parameter
# to the script. If the parameter is missing, then the script uses the current working directory path
# returned by pwd. 
MY_ROSLOG_PATH="$1"

if [ -z "$1" ] ; then
    # if no parameter given to the script, use the default (path to working directory)
    # for MY_ROSLOG_PATH
    MY_ROSLOG_PATH="`(pwd)`"
fi

# if the roslog path is a relative path, it should be converted to an absolute one. That's what's done
# here.
cd $MY_ROSLOG_PATH
MY_ROSLOG_PATH="`(pwd)`"
# undo side-effect of previous cd: we need pwd restored to its previous value for the next step to work.
cd "$OLDPWD"

echo "Using the following path to roslog files tf.json and logged_designators.json ..."
echo "$MY_ROSLOG_PATH"

# this is where the script (attempts to) get the path to itself. This is needed to find the user_db 
# in the docker package. We assume here that there is a fixed relationship between this script's path
# and the path to user_db
MY_PATH="`dirname \"$0\"`"
MY_PATH="`(cd \"$MY_PATH\" && pwd)`"

if [ -z "$MY_PATH" ] ; then
    echo "ERROR: cannot access own path. Maybe a permission denied case."
    exit 1
fi

echo "Current path for this script is ... "
echo "$MY_PATH"

# create data volume for user db
cd $MY_PATH
cd ../user_db
docker build -t knowrob/user_db .
docker run -d -v /opt/webapp/db --name user_db knowrob/user_db true


# create data volume for MongoDB
docker run -d -v /data/db --name mongo_data busybox true


# pull and start MongoDB container
docker pull mongo
docker run -d -p 27017:27017 --volumes-from mongo_data --name mongo_db mongo


# execute the import procedure

cd $MY_ROSLOG_PATH
mongoimport --db roslog --collection tf tf.json
mongoimport --db roslog --collection logged_designators logged_designators.json

# set mongo indexes:
cd $MY_PATH

mongo roslog --eval "db.tf.ensureIndex( { __recorded : 1 } )"
mongo roslog --eval "db.tf.ensureIndex( { 'transforms.header.stamp' : 1 } )"
mongo roslog --eval "db.logged_designators.ensureIndex( { __recorded : 1 } )"

